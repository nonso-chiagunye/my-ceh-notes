The objective of this lab is to extract information about the target system that includes, but not limited to:

Network vulnerabilities
IP and Transmission Control Protocol/User Datagram Protocol (TCP/UDP) ports and services that are listening
Application and services configuration errors/vulnerabilities
The OS version running on computers or devices
Applications installed on computers
Accounts with weak passwords
Files and folders with weak permissions
Default services and applications that may have to be uninstalled
Mistakes in the security configuration of common applications
Computers exposed to known or publicly reported vulnerabilities




1. Perform vulnerability research with vulnerability scoring systems and databases

a. Perform vulnerability research in Common Weakness Enumeration (CWE)

https://cwe.mitre.org/
Search
Home
CWE List


b. Perform vulnerability research in Common Vulnerabilities and Exposures (CVE)

https://cve.mitre.org/
Newest CVE Record
Search CVE List


c. Perform vulnerability research in National Vulnerability Database (NVD)

https://nvd.nist.gov/
U.S. government repository of standards-based vulnerability management data represented using the Security Content Automation Protocol (SCAP).

CVSS v3.0
Severity               Base Score Range
None                    0.0
Low                     0.1 - 3.9
Medium                  4.0   6.9
High                    7.0   8.9
Critical                9.0   10.0

CVSS v2.0
Severity                Base Score Range
Low                     0.0  3.9
Medium                  4.0  6.9
High                    7.0  10.0

Temporal Score: Represents the qualities of the vulnerability that change over time
Environmental Score: Represents the qualities of the vulnerability that are specific to the affected user's environment.
Overall Score: Sum total of both the scores (CVSS Base Score, CVSS Temporal Score)

Temporal Score Metrics

Exploit Code Maturity (E)
-Note Defined (E:X) -Unproven that exploit exist (E:U) -Proof of Concept code (E:P) -Functional Exploit Exist(E:F) -High(E:H)

Remediation Level (RL)
-Not Defined (RL:X) -Official (RL:O) -Temporary fix (RL:T) -Workaround (RL:W) -Unavailable (RL:U)

Report Confidence (RC)
-Not Defined (RC:X) -Unknown (RC:U) -Reasonable (RC:R) -Confirmed (RC:C)

Environmental Score (Just add "M" to base Score)





2. Perform vulnerability assessment using various vulnerability assessment tools

a. Perform vulnerability analysis using OpenVAS

PS: The actual security scanner is accompanied with a regularly updated feed of Network Vulnerability Tests (NVTs)—over 50,000 in total.
Applications -> Pentesting -> Vulnerability Analysis -> Openvas - Greenbone -> Start Greenbone Vulnerability Manager Service 
Input Password in terminal
Open Browser -> https://127.0.0.1:9392
Username: admin,  Password: password
Scans -> Tasks -> Task Wizard -> Input IP -> Start Scan.
Click Done -> 




b. Perform vulnerability scanning using Nessus

Microsoft Edge Browser -> https://localhost:8834/
Username: Admin  , Password: password
Policies -> Create a New Policy -> Advanced Scan -> Settings BASIC (Specify Policy Name and Description) -> Settings DISCOVERY Host Discovery(Turn Off Ping the remote host) -> Settings DISCOVERY Port Scanning
After setting up the "Settings, Credentials and Plugins", click Save.
Scan -> Create a new Scan -> User Defined -> (The Scan Policy you created) -> Set Target -> Schedule (Turn off Enabled) -> Launch
After Completion, click Scans -> Report -> Choose Format - Generate Report





c. Perform vulnerability scanning using GFI LanGuard

https://www.gfi.com/products-and-solutions/network-security-solutions/gfi-languard/download/
Register with your business email and download installer





d. Perform web servers and applications vulnerability scanning using CGI Scanner Nikto

Applications -> Pentesting -> Web Application Analysis -> Web Vulnerability Scanner -> Nikto 

$ nikto -H  (View available commands)

Note: A TUNING scan can be used to decrease the number of tests performed against a target. By specifying the type of test to include or exclude, faster and focused testing can be completed. This is useful in situations where the presence of certain file types such as XSS or simply “interesting” files is undesired.

$ nikto -h www.certifiedhacker.com -Tuning x  (-h = target host, x = specifies Reverse Tuning Options [include all except specified])
$ nikto -h www.certifiedhacker.com -Cgidirs all   (-Cgidirs scans the specified CGI directories)
$ nikto -h www.cerfiedhacker.com -o myfilename -F txt    (save the scan as myfilename.txt)






