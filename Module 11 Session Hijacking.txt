Module 11: Session Hijacking

Application-level hijacking involves gaining control over the Hypertext Transfer Protocol (HTTP) user session by obtaining the session IDs. Network-level hijacking is prevented by packet encryption, which can be achieved with protocols such as IPsec, SSL, and SSH.


Objective

The objective of the lab is to perform session hijacking and other tasks that include, but are not limited to:

	- Hijack a session by intercepting traffic between server and client
	- Steal a user session ID by intercepting traffic
	- Detect session hijacking attacks


- Active session hijacking: An attacker finds an active session and takes it over
- Passive session hijacking: An attacker hijacks a session, and, instead of taking over, monitors and records all the traffic in that   session




1. Perform session hijacking

PS:  It involves stealing or guessing a victim’s valid session ID, which the server uses to identify authenticated users, and using it to establish a connection with the server. The server responds to the attacker’s requests as though it were communicating with an authenticated user, after which the attacker is able to perform any action on that system.

Session hijacking can be divided into three broad phases:

- Tracking the Connection: The attacker uses a network sniffer to track a victim and host, or uses a tool such as Nmap to scan the network for a target with a TCP sequence that is easy to predict

- Desynchronizing the Connection: A desynchronized state occurs when a connection between the target and host has been established, or is stable with no data transmission, or when the server’s sequence number is not equal to the client’s acknowledgment number (or vice versa)

- Injecting the Attacker’s Packet: Once the attacker has interrupted the connection between the server and target, they can either inject data into the network or actively participate as the man-in-the-middle, passing data between the target and server, while reading and injecting data at will





a. Hijack a session using Zed Attack Proxy (ZAP)

PS: ZAP allows you to see all the requests you make to a web app and all the responses you receive from it.

PS:  Among other things, it allows you to see AJAX calls that may not otherwise be outright visible. 

PS: You can also set breakpoints, which allow you to change the requests and responses in real-time.


Step 1: Configure Proxy Setting on Victim's Machine (.11)

Open Chrome -> Customize and control Google Chrome icon -> Settings -> Advanced -> System -> Open your computer's proxy settings -> Manual proxy setup: Set up -> Use a proxy server: On -> Proxy IP: 10.10.1.19 (attacker) -> Port: 8080 -> Save

Step 2: Configure ZAP on Attacker Machine (.19)

ZAP -> No, I don't want to persist ... -> Start -> + -> Break (allows you modify response or request)

Step 3: Configure ZAP as a Proxy

Options -> Local Proxies -> Address: 10.10.1.19 -> Port: 8080 -> Ok -> Set break on all requests and responses

Step 4: Launch a GET request on victm machine (.11)

Same browser -> www.moviescope.com -> Advanced -> Proceed ..(unsafe)

Step 5: Modify request at Attacker Machine (.19)

View the GET requst issued
Submit and step to next request or response (capture the www.moviescope.com request) -> HTTP response appears
Submit and step to next request or response -> in the Break tab, modify www.moviescope.com to www.goodshopping.com in all the captured GET requests
Submit and step to next request or response (forward the modified traffic to victim)
In all the "HTTP Not Found" requests, click Submit and step to next request or response
Modify every GET request captured by OWASP ZAP until you see the www.goodshopping.com page in the victim's machine (You need to switch back-and-forth. If at any time you do not receive any request or you see a blank break tab, refresh browser).

Step 6: Remove Proxy setting from Browser when done.

Repeat step 1. Use a Proxy Server: Off





b. Intercept HTTP traffic using bettercap

PS: bettercap is a powerful, flexible, and portable tool created to perform various types of MITM attacks against a network; manipulate HTTP, HTTPS, and TCP traffic in real-time; sniff for credentials; etc.

Step 1: (Parrot) - Set bettercap to sniff Victim (.11)

$ sudo su
$ cd  (To root)
$ bettercap -h    (request a list of available options)
$ bettercap -iface eth0   (-iface = specifies the interface to bind to)
$ help    (view list of available modules in bettercap)
$ net.probe on  (send different types of probe packets to each IP in current subnet for the net.recon module to detect them)
$ net.recon on   (periodically read the system ARP table to detect new hosts on the network) (Displays all detected IP in local nwk)
$ set http.proxy.sslstrip true  (enable SSL stripping)
$ set arp.spoof.internal true  (spoof the local connections among computers of the internal network)
$ set arp.spoof.targets 10.10.1.11    (Spoof the IP address of the target host)
$ http.proxy on  (initiate http proxy)
$ arp.spoof on   (initiate ARP spoofing)
$ net.sniff on   (perform sniffing on the network)
$ set net.sniff.regexp '.*password=.+'    (only consider packets sent with a payload matching the given regular expression)
bettercap starts sniffing network traffic on target machine Windows 11

Step 2: Visit a site from victm's machine (.11)

Open Mozilla -> http://www.moviescope.com -> Username/Password: sam/test

Step 3: Observe the captured credentials on Attacker Machine





c. Intercept HTTP traffic using Hetty

PS: Hetty can be used to perform Machine-in-the-middle (MITM) attack, manually create/edit requests, and replay proxied requests for HTTP clients and further intercept requests and responses for manual review.

Step 1: Launch Hetty on Attacker Machine (.11)

E:\CEH-Tools\..\Hetty double-click hetty.exe -> Minimize all windows and launch a web browser (Mozilla) -> http://localhost:8080 -> MANAGE PROJECTS -> Project Name: Moviescope -> + CREATE & OPEN PROJECT -> Proxy logs (icon)

Step 2: Configure Proxy Settings on Victim Machine (.22)

Open Chrome -> Customize and control Google Chrome icon -> Settings -> Advanced -> System -> Open your computer's proxy settings -> Manual proxy setup: Set up -> Use a proxy server: On -> Proxy IP: 10.10.1.11 (attacker) -> Port: 8080 -> Save

Step 3: Visit a Website and Make a POST Request

http://www.moviescope.com -> sam/test

Step 4: Observe captured credentials on Proxy Log (.11)

Open Hetty -> Look for POST of www.moviescope.com -> Body 







2. Detect session hijacking

PS: There are two primary methods that can be used to detect session hijacking:

- Manual Method: Involves using packet sniffing software such as Wireshark and SteelCentral Packet Analyzer to monitor session hijacking attacks; the packet sniffer captures packets being transferred across the network, which are then analyzed using various filtering tools

- Automatic Method: Involves using Intrusion Detection Systems (IDS) and Intrusion Prevention Systems (IPS) to monitor incoming network traffic; if a packet matches any of the attack signatures in the internal database, the IDS generates an alert, and the IPS blocks the traffic from entering the database



a. Detect session hijacking using Wireshark

Step 1: Launch Wireshark on Victim Machine (.11)

Step 2: Use bettercap to sniff (.13)

$ bettercap -iface eth0
$ net.probe on
$ net.recon on
$ net.sniff on (bettercap starts sniffing)

Step 3: Observe ARP Packets on Victim (.11)
























































































